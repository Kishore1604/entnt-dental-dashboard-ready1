{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KISHOR E\\\\Downloads\\\\entnt_dental_dashboard_ready1\\\\src\\\\pages\\\\Patients.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Patients() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [newPatient, setNewPatient] = useState({\n    name: \"\",\n    dob: \"\",\n    contact: \"\"\n  });\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"patients\") || \"[]\");\n    setPatients(data);\n  }, []);\n  const addPatient = () => {\n    const updated = [...patients, {\n      ...newPatient,\n      id: Date.now().toString()\n    }];\n    setPatients(updated);\n    localStorage.setItem(\"patients\", JSON.stringify(updated));\n    setNewPatient({\n      name: \"\",\n      dob: \"\",\n      contact: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Patient Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 rounded\",\n        placeholder: \"Name\",\n        value: newPatient.name,\n        onChange: e => setNewPatient({\n          ...newPatient,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 rounded\",\n        placeholder: \"DOB\",\n        value: newPatient.dob,\n        onChange: e => setNewPatient({\n          ...newPatient,\n          dob: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 rounded\",\n        placeholder: \"Contact\",\n        value: newPatient.contact,\n        onChange: e => setNewPatient({\n          ...newPatient,\n          contact: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPatient,\n        className: \"bg-blue-500 text-white p-2 rounded\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: patients.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [p.name, \" - \", p.dob, \" - \", p.contact]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Patients, \"q4Fkm2Y2pa9+Scc/PzJNoiv7NO0=\");\n_c = Patients;\nvar _c;\n$RefreshReg$(_c, \"Patients\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Patients","_s","patients","setPatients","newPatient","setNewPatient","name","dob","contact","data","JSON","parse","localStorage","getItem","addPatient","updated","id","Date","now","toString","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","p","_c","$RefreshReg$"],"sources":["C:/Users/KISHOR E/Downloads/entnt_dental_dashboard_ready1/src/pages/Patients.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function Patients() {\n  const [patients, setPatients] = useState([]);\n  const [newPatient, setNewPatient] = useState({ name: \"\", dob: \"\", contact: \"\" });\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"patients\") || \"[]\");\n    setPatients(data);\n  }, []);\n\n  const addPatient = () => {\n    const updated = [...patients, { ...newPatient, id: Date.now().toString() }];\n    setPatients(updated);\n    localStorage.setItem(\"patients\", JSON.stringify(updated));\n    setNewPatient({ name: \"\", dob: \"\", contact: \"\" });\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl font-bold mb-4\">Patient Management</h2>\n      <div className=\"mb-4 space-x-2\">\n        <input className=\"border p-2 rounded\" placeholder=\"Name\" value={newPatient.name} onChange={e => setNewPatient({ ...newPatient, name: e.target.value })} />\n        <input className=\"border p-2 rounded\" placeholder=\"DOB\" value={newPatient.dob} onChange={e => setNewPatient({ ...newPatient, dob: e.target.value })} />\n        <input className=\"border p-2 rounded\" placeholder=\"Contact\" value={newPatient.contact} onChange={e => setNewPatient({ ...newPatient, contact: e.target.value })} />\n        <button onClick={addPatient} className=\"bg-blue-500 text-white p-2 rounded\">Add</button>\n      </div>\n      <ul>\n        {patients.map(p => <li key={p.id}>{p.name} - {p.dob} - {p.contact}</li>)}\n      </ul>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}